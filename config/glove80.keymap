/*
 * Copyright (c) 2020 The ZMK Contributors
 * Copyright (c) 2025 Innaworks Development Limited, trading as MoErgo
 *
 * SPDX-License-Identifier: MIT
 */
/* THIS FILE WAS GENERATED BY GLOVE80 LAYOUT EDITOR
 *
 * This file was generated automatically. You may or may not want to
 * edit it directly.
 */
/* Include all behavior includes needed */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/rgb.h>

/* On demand includes */
/* Helper Macros, based on https://github.com/urob/zmk-helpers/ */

#pragma once

#define ZMK_HELPER_STRINGIFY(x) #x

// Preprocessor mechanism to overload macros, cf. https://stackoverflow.com/a/27051616/6114651

#define VARGS_(_10, _9, _8, _7, _6, _5, _4, _3, _2, _1, N, ...) N
#define VARGS(...) VARGS_(__VA_ARGS__, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0)
#define CONCAT_(a, b) a##b
#define CONCAT(a, b) CONCAT_(a, b)

#define ZMK_BEHAVIOR_CORE_tap_dance  \
    compatible = "zmk,behavior-tap-dance"; \
    #binding-cells = <0>

#define ZMK_BEHAVIOR(name, type, ...) \
    name: name { \
        ZMK_BEHAVIOR_CORE_ ## type; \
        __VA_ARGS__ \
    };
#define ZMK_TAP_DANCE(name, ...) \
    ZMK_BEHAVIOR(name, tap_dance, __VA_ARGS__)
#define ZMK_TD_LAYER(name, layer) \
    ZMK_TAP_DANCE(name, \
        tapping-term-ms = <200>; \
        bindings = <&mo layer>, <&to layer>; \
)

/* Automatically generated layer name #define */

#define LAYER_BaseHRM 0
#define LAYER_Base 1
#define LAYER_Lower 2
#define LAYER_Upper 3
#define LAYER_Magic 4

/* To deal with the situation where there is no Lower layer, to keep &lower happy */

#ifndef LAYER_Lower

#define LAYER_Lower 0

#

endif {
    /* Custom Device-tree */
    /* Input Listeners */
    /* System behavior and Macros */

    /

    behaviors {
        ZMK_TD_LAYER(lower, LAYER_Lower)
    };
};

/ {
    macros {
        rgb_ug_status_macro: rgb_ug_status_macro {
            label = "RGB_UG_STATUS";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&rgb_ug RGB_STATUS>;
        };
    };
};

/ {
    #ifdef BT_DISC_CMD

    behaviors {
        bt_0: bt_0 {
            compatible = "zmk,behavior-tap-dance";
            label = "BT_0";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&bt_select_0>, <&bt BT_DISC 0>;
        };

        bt_1: bt_1 {
            compatible = "zmk,behavior-tap-dance";
            label = "BT_1";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&bt_select_1>, <&bt BT_DISC 1>;
        };

        bt_2: bt_2 {
            compatible = "zmk,behavior-tap-dance";
            label = "BT_2";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&bt_select_2>, <&bt BT_DISC 2>;
        };

        bt_3: bt_3 {
            compatible = "zmk,behavior-tap-dance";
            label = "BT_3";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&bt_select_3>, <&bt BT_DISC 3>;
        };
    };

    macros {
        bt_select_0: bt_select_0 {
            label = "BT_SELECT_0";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&out OUT_BLE &bt BT_SEL 0>;
        };

        bt_select_1: bt_select_1 {
            label = "BT_SELECT_1";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&out OUT_BLE &bt BT_SEL 1>;
        };

        bt_select_2: bt_select_2 {
            label = "BT_SELECT_2";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&out OUT_BLE &bt BT_SEL 2>;
        };

        bt_select_3: bt_select_3 {
            label = "BT_SELECT_3";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&out OUT_BLE &bt BT_SEL 3>;
        };
    };

    #else

    macros {
        bt_0: bt_0 {
            label = "BT_0";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&out OUT_BLE &bt BT_SEL 0>;
        };

        bt_1: bt_1 {
            label = "BT_1";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&out OUT_BLE &bt BT_SEL 1>;
        };

        bt_2: bt_2 {
            label = "BT_2";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&out OUT_BLE &bt BT_SEL 2>;
        };

        bt_3: bt_3 {
            label = "BT_3";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&out OUT_BLE &bt BT_SEL 3>;
        };
    };

    #endif
};

/ {
    behaviors {
        magic: magic {
            compatible = "zmk,behavior-hold-tap";
            label = "MAGIC_HOLD_TAP";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            bindings = <&mo>, <&rgb_ug_status_macro>;
        };
    };
};

/* #define for key positions */

#define POS_LH_T1 52
#define POS_LH_T2 53
#define POS_LH_T3 54
#define POS_LH_T4 69
#define POS_LH_T5 70
#define POS_LH_T6 71
#define POS_LH_C1R2 15
#define POS_LH_C1R3 27
#define POS_LH_C1R4 39
#define POS_LH_C1R5 51
#define POS_LH_C2R1 4
#define POS_LH_C2R2 14
#define POS_LH_C2R3 26
#define POS_LH_C2R4 38
#define POS_LH_C2R5 50
#define POS_LH_C2R6 68
#define POS_LH_C3R1 3
#define POS_LH_C3R2 13
#define POS_LH_C3R3 25
#define POS_LH_C3R4 37
#define POS_LH_C3R5 49
#define POS_LH_C3R6 67
#define POS_LH_C4R1 2
#define POS_LH_C4R2 12
#define POS_LH_C4R3 24
#define POS_LH_C4R4 36
#define POS_LH_C4R5 48
#define POS_LH_C4R6 66
#define POS_LH_C5R1 1
#define POS_LH_C5R2 11
#define POS_LH_C5R3 23
#define POS_LH_C5R4 35
#define POS_LH_C5R5 47
#define POS_LH_C5R6 65
#define POS_LH_C6R1 0
#define POS_LH_C6R2 10
#define POS_LH_C6R3 22
#define POS_LH_C6R4 34
#define POS_LH_C6R5 46
#define POS_LH_C6R6 64
#define POS_RH_T1 57
#define POS_RH_T2 56
#define POS_RH_T3 55
#define POS_RH_T4 74
#define POS_RH_T5 73
#define POS_RH_T6 72
#define POS_RH_C1R2 16
#define POS_RH_C1R3 28
#define POS_RH_C1R4 40
#define POS_RH_C1R5 58
#define POS_RH_C2R1 5
#define POS_RH_C2R2 17
#define POS_RH_C2R3 29
#define POS_RH_C2R4 41
#define POS_RH_C2R5 59
#define POS_RH_C2R6 75
#define POS_RH_C3R1 6
#define POS_RH_C3R2 18
#define POS_RH_C3R3 30
#define POS_RH_C3R4 42
#define POS_RH_C3R5 60
#define POS_RH_C3R6 76
#define POS_RH_C4R1 7
#define POS_RH_C4R2 19
#define POS_RH_C4R3 31
#define POS_RH_C4R4 43
#define POS_RH_C4R5 61
#define POS_RH_C4R6 77
#define POS_RH_C5R1 8
#define POS_RH_C5R2 20
#define POS_RH_C5R3 32
#define POS_RH_C5R4 44
#define POS_RH_C5R5 62
#define POS_RH_C5R6 78
#define POS_RH_C6R1 9
#define POS_RH_C6R2 21
#define POS_RH_C6R3 33
#define POS_RH_C6R4 45
#define POS_RH_C6R5 63
#define POS_RH_C6R6 79

/* Custom Defined Behaviors */

/ {
};

/* Automatically generated macro definitions */

/ {
    macros {
        // ctl-a 1

        tmux_win1: tmux_win1 {
            label = "&TMUX_WIN1";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LCTRL>,
                <&macro_tap>,
                <&kp A>,
                <&macro_release>,
                <&kp LCTRL>,
                <&macro_wait_time 30>,
                <&macro_tap>,
                <&kp N1>;
        };

        // ctl-a 2

        tmux_win2: tmux_win2 {
            label = "&TMUX_WIN2";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LCTRL>,
                <&macro_tap>,
                <&kp A>,
                <&macro_release>,
                <&kp LCTRL>,
                <&macro_wait_time 30>,
                <&macro_tap>,
                <&kp N2>;
        };

        // ctl-a 3

        tmux_win3: tmux_win3 {
            label = "&TMUX_WIN3";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LCTRL>,
                <&macro_tap>,
                <&kp A>,
                <&macro_release>,
                <&kp LCTRL>,
                <&macro_wait_time 30>,
                <&macro_tap>,
                <&kp N3>;
        };

        // ctl-a c

        tmux_new_tab: tmux_new_tab {
            label = "&TMUX_NEW_TAB";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LCTRL>,
                <&macro_tap>,
                <&kp A>,
                <&macro_release>,
                <&kp LCTRL>,
                <&macro_wait_time 30>,
                <&macro_tap>,
                <&kp C>;
        };

        // ctl-a 4

        tmux_win4: tmux_win4 {
            label = "&TMUX_WIN4";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LCTRL>,
                <&macro_tap>,
                <&kp A>,
                <&macro_release>,
                <&kp LCTRL>,
                <&macro_wait_time 30>,
                <&macro_tap>,
                <&kp N4>;
        };

        // ctl-a 5

        tmux_win5: tmux_win5 {
            label = "&TMUX_WIN5";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LCTRL>,
                <&macro_tap>,
                <&kp A>,
                <&macro_release>,
                <&kp LCTRL>,
                <&macro_wait_time 30>,
                <&macro_tap>,
                <&kp N5>;
        };

        // ctl-a s

        tmux_sessions: tmux_sessions {
            label = "&TMUX_SESSIONS";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LCTRL>,
                <&macro_tap>,
                <&kp A>,
                <&macro_release>,
                <&kp LCTRL>,
                <&macro_wait_time 30>,
                <&macro_tap>,
                <&kp S>;
        };

        // ctl-a d

        tmux_detach: tmux_detach {
            label = "&TMUX_DETACH";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LCTRL>,
                <&macro_tap>,
                <&kp A>,
                <&macro_release>,
                <&kp LCTRL>,
                <&macro_wait_time 30>,
                <&macro_tap>,
                <&kp D>;
        };

        // ctl-a $

        tmux_rename: tmux_rename {
            label = "&TMUX_RENAME";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LCTRL>,
                <&macro_tap>,
                <&kp A>,
                <&macro_release>,
                <&kp LCTRL>,
                <&macro_wait_time 30>,
                <&macro_tap>,
                <&kp LS(N4)>;
        };

        // ctl-a (

        tmux_prev_session: tmux_prev_session {
            label = "&TMUX_PREV_SESSION";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LCTRL>,
                <&macro_tap>,
                <&kp A>,
                <&macro_release>,
                <&kp LCTRL>,
                <&macro_wait_time 30>,
                <&macro_tap>,
                <&kp LS(N9)>;
        };

        // ctl-a )

        tmux_next_session: tmux_next_session {
            label = "&TMUX_NEXT_SESSION";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LCTRL>,
                <&macro_tap>,
                <&kp A>,
                <&macro_release>,
                <&kp LCTRL>,
                <&macro_wait_time 30>,
                <&macro_tap>,
                <&kp LS(N0)>;
        };
    };
};

/* Automatically generated behavior definitions */

/ {
    behaviors {
        mt_slow: mt_slow {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            bindings = <&kp>, <&kp>;

            flavor = "balanced";
            quick-tap-ms = <150>;
            hold-trigger-key-positions = <>;
        };
    };
};

/* Automatically generated combos definitions */
/* Automatically generated keymap */

/ {
    keymap {
        compatible = "zmk,keymap";

        Base-HRM {
            bindings = <
&kp F1      &kp F2           &kp F3            &kp F4           &kp F5                                                                                                           &kp F6            &kp F7           &kp F8            &kp F9              &kp F10
&kp GRAVE   &kp N1           &kp N2            &kp N3           &kp N4            &kp N5                                                                                 &kp N6  &kp N7            &kp N8           &kp N9            &kp N0              &kp MINUS
&kp TAB     &kp Q            &kp W             &kp E            &kp R             &kp T                                                                                  &kp Y   &kp U             &kp I            &kp O             &kp P               &kp BSLH
&kp ESC     &mt_slow LALT A  &mt_slow LCTRL S  &mt_slow LGUI D  &mt_slow LSHFT F  &kp G                                                                                  &kp H   &mt_slow RSHFT J  &mt_slow RGUI K  &mt_slow RCTRL L  &mt_slow RALT SEMI  &kp SQT
&kp EQUAL   &kp Z            &kp X             &kp C            &kp V             &kp B   &mt LSHFT RET    &kp LGUI       &kp LALT  &kp RCTRL  &kp RGUI     &kp RSHFT    &kp N   &kp M             &kp COMMA        &kp DOT           &kp FSLH            &kp PG_UP
&magic 5 0  &kp HOME         &kp END           &kp LEFT         &kp RIGHT                 &lt 4 BACKSPACE  &mt LCTRL ESC  &mo 5     &mo 3      &lt 1 ENTER  &lt 2 SPACE          &kp DOWN          &kp UP           &kp LBKT          &kp RBKT            &kp PG_DN
            >;
        };

        Symbol {
            bindings = <
&trans  &trans         &trans      &trans      &trans                                                                                             &trans  &trans  &trans  &trans  &trans
&trans  &trans         &trans      &trans      &trans      &trans                                                                         &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp LS(LBKT)   &kp LS(N7)  &kp LS(N8)  &kp LS(N9)  &kp LS(RBKT)                                                                   &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp LS(SEMI)   &kp LS(N4)  &kp LS(N5)  &kp LS(N6)  &kp LS(EQUAL)                                                                  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp LS(MINUS)  &kp LS(N1)  &kp LS(N2)  &kp LS(N3)  &kp LS(BSLH)   &trans      &trans       &trans         &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans         &trans      &trans      &trans                     &kp RS(N9)  &kp LS(DOT)  &kp LS(MINUS)  &trans  &trans  &trans          &trans  &trans  &trans  &trans  &trans
            >;
        };

        Number {
            bindings = <
&trans  &trans     &trans  &trans  &trans                                                                         &trans  &trans  &trans  &trans  &trans
&trans  &trans     &trans  &trans  &trans  &trans                                                         &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp LBKT   &kp N7  &kp N8  &kp N9  &kp RBKT                                                       &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp SEMI   &kp N4  &kp N5  &kp N6  &kp EQUAL                                                      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp GRAVE  &kp N1  &kp N2  &kp N3  &kp FSLH   &trans   &trans  &trans     &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans     &trans  &trans  &trans             &kp DOT  &kp N0  &kp MINUS  &trans  &trans  &trans          &trans  &trans  &trans  &trans  &trans
            >;
        };

        Function {
            bindings = <
&trans  &trans   &trans  &trans  &trans                                                                   &trans  &trans  &trans  &trans  &trans
&trans  &trans   &trans  &trans  &trans  &trans                                                   &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp F12  &kp F7  &kp F8  &kp F9  &trans                                                   &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp F11  &kp F4  &kp F5  &kp F6  &trans                                                   &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp F10  &kp F1  &kp F2  &kp F3  &trans  &trans  &trans  &trans   &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans   &trans  &trans  &trans          &trans  &trans  &kp TAB  &trans  &trans  &trans          &trans  &trans  &trans  &trans  &trans
            >;
        };

        Nav-Tmux {
            bindings = <
&trans  &trans      &trans          &trans         &trans                                                                                                 &trans     &trans     &trans      &trans  &trans
&trans  &tmux_win1  &tmux_win2      &tmux_win3     &tmux_win4          &tmux_win5                                                          &trans         &trans     &trans     &trans      &trans  &trans
&trans  &trans      &trans          &trans         &tmux_rename        &trans                                                              &kp LS(MINUS)  &kp LC(D)  &kp LC(U)  &kp LS(N4)  &trans  &trans
&trans  &trans      &tmux_sessions  &tmux_detach   &tmux_prev_session  &tmux_next_session                                                  &kp LEFT       &kp DOWN   &kp UP     &kp RIGHT   &trans  &trans
&trans  &trans      &trans          &tmux_new_tab  &trans              &trans              &trans  &trans  &trans  &trans  &trans  &trans  &kp HOME       &kp PG_DN  &kp PG_UP  &kp END     &trans  &trans
&trans  &trans      &trans          &trans         &trans                                  &trans  &trans  &trans  &trans  &trans  &trans                 &trans     &trans     &trans      &trans  &trans
            >;
        };

        layer_Magic {
            bindings = <
&bt BT_CLR   &none            &none            &none            &none                                                                                       &none  &none  &none  &none  &bt BT_CLR_ALL
&none        &none            &none            &none            &none            &none                                                               &none  &none  &none  &none  &none  &none
&none        &rgb_ug RGB_SPI  &rgb_ug RGB_SAI  &rgb_ug RGB_HUI  &rgb_ug RGB_BRI  &rgb_ug RGB_TOG                                                     &none  &none  &none  &none  &none  &none
&bootloader  &rgb_ug RGB_SPD  &rgb_ug RGB_SAD  &rgb_ug RGB_HUD  &rgb_ug RGB_BRD  &rgb_ug RGB_EFF                                                     &none  &none  &none  &none  &none  &bootloader
&sys_reset   &none            &none            &none            &none            &none            &bt_2  &bt_3  &none         &none  &none   &none   &none  &none  &none  &none  &none  &sys_reset
&none        &none            &none            &none            &none                             &bt_0  &bt_1  &out OUT_USB  &none  &tog 6  &tog 0         &none  &none  &none  &none  &none
            >;
        };

        layer_Base {
            bindings = <
&kp F1      &kp F2    &kp F3   &kp F4    &kp F5                                                                                             &kp F6    &kp F7     &kp F8    &kp F9    &kp F10
&kp GRAVE   &kp N1    &kp N2   &kp N3    &kp N4     &kp N5                                                                          &kp N6  &kp N7    &kp N8     &kp N9    &kp N0    &kp MINUS
&kp TAB     &kp Q     &kp W    &kp E     &kp R      &kp T                                                                           &kp Y   &kp U     &kp I      &kp O     &kp P     &kp BSLH
&kp ESC     &kp A     &kp S    &kp D     &kp F      &kp G                                                                           &kp H   &kp J     &kp K      &kp L     &kp SEMI  &kp SQT
&kp EQUAL   &kp Z     &kp X    &kp C     &kp V      &kp B   &mt LSHFT RET  &kp LGUI       &kp LALT  &kp RCTRL  &kp RGUI  &kp RSHFT  &kp N   &kp M     &kp COMMA  &kp DOT   &kp FSLH  &kp PG_UP
&magic 5 0  &kp HOME  &kp END  &kp LEFT  &kp RIGHT          &kp BSPC       &mt LCTRL ESC  &mo 4     &mo 4      &kp RET   &kp SPACE          &kp DOWN  &kp UP     &kp LBKT  &kp RBKT  &kp PG_DN
            >;
        };
    };
};
